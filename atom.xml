<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Monologue From a Data Geek</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-05T06:06:46.321Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Henry Gao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Naive Bayes Classifier</title>
    <link href="http://yoursite.com/2020/03/01/Naive-Bayes-Classifier/"/>
    <id>http://yoursite.com/2020/03/01/Naive-Bayes-Classifier/</id>
    <published>2020-03-01T22:06:45.000Z</published>
    <updated>2020-03-05T06:06:46.321Z</updated>
    
    <summary type="html">
    
      &lt;div align=&quot;center&quot;&gt;

&lt;h1 id=&quot;Naive-Bayes-Classifier-and-Evaluation&quot;&gt;&lt;a href=&quot;#Naive-Bayes-Classifier-and-Evaluation&quot; class=&quot;headerlink&quot; title=&quot;Naive Bayes Classifier and Evaluation&quot;&gt;&lt;/a&gt;Naive Bayes Classifier and Evaluation&lt;/h1&gt;&lt;/div&gt;

&lt;h2 id=&quot;Program-Instruction&quot;&gt;&lt;a href=&quot;#Program-Instruction&quot; class=&quot;headerlink&quot; title=&quot;Program Instruction&quot;&gt;&lt;/a&gt;Program Instruction&lt;/h2&gt;&lt;h3 id=&quot;1-Training-Function&quot;&gt;&lt;a href=&quot;#1-Training-Function&quot; class=&quot;headerlink&quot; title=&quot;1. Training Function&quot;&gt;&lt;/a&gt;1. Training Function&lt;/h3&gt;&lt;p&gt;To collect the word counts, we need to first split the text in the training set. In this case, I used regular expression &lt;strong&gt;‘[^A-Za-z\‘]+’&lt;/strong&gt; as the seperator. Specifically, it will discard all non-letters except for single quote because some word with quote may have different meanings such as “I’m”, “That’s”, etc.&lt;/p&gt;
&lt;p&gt;Then, the class initialization was changed. I used set to collect all the features instead of using dictionary, and added a new variable &lt;em&gt;class_count&lt;/em&gt; to collect class counts. Inside the train function, it can visit every seperate word and generate word counts based on the document’s class. Accordingly, it will caculate the priors and likelihoods.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Project" scheme="http://yoursite.com/categories/Project/"/>
    
      <category term="Computational Linguistics" scheme="http://yoursite.com/categories/Project/Computational-Linguistics/"/>
    
    
      <category term="Naive Bayes" scheme="http://yoursite.com/tags/Naive-Bayes/"/>
    
      <category term="NLP" scheme="http://yoursite.com/tags/NLP/"/>
    
      <category term="Computational Linguistics" scheme="http://yoursite.com/tags/Computational-Linguistics/"/>
    
      <category term="Course Project" scheme="http://yoursite.com/tags/Course-Project/"/>
    
  </entry>
  
  <entry>
    <title>About Me</title>
    <link href="http://yoursite.com/2020/01/22/aboutme/"/>
    <id>http://yoursite.com/2020/01/22/aboutme/</id>
    <published>2020-01-23T02:37:04.000Z</published>
    <updated>2020-03-05T06:15:01.476Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;blockquote&gt;
&lt;p&gt;A data geek, study in Brandeis University&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Name: Heyuan (Henry) Gao&lt;br&gt;Location: Greater Boston Area,
        
      
    
    </summary>
    
    
    
      <category term="Self Instruction" scheme="http://yoursite.com/tags/Self-Instruction/"/>
    
  </entry>
  
</feed>
